# https://github.com/dockcross/dockcross/blob/master/linux-x86/Dockerfile.in
FROM 05nelsonm/build-env.linux-libc.base:latest

RUN echo 'Installing packages for i686' && \
    dpkg --add-architecture i386 && \
    apt-get update --yes && \
    apt-get install --yes \
      gcc-multilib \
      libc6:i386

ENV CROSS_TARGET i686-linux-gnu
ENV CROSS_BIN /usr/${CROSS_TARGET}/bin
ENV PATH ${CROSS_BIN}:${PATH}

# Create symlinks for x86_64 binaries that support x86 and x86_64 targets natively
RUN mkdir -p ${CROSS_BIN} && \
  cd ${CROSS_BIN} && \
  ln -s /usr/bin/x86_64-linux-gnu-ar ${CROSS_TARGET}-ar && \
  ln -s /usr/bin/x86_64-linux-gnu-as ${CROSS_TARGET}-as && \
  ln -s /usr/bin/x86_64-linux-gnu-c++filt ${CROSS_TARGET}-c++filt && \
  ln -s /usr/bin/x86_64-linux-gnu-cpp ${CROSS_TARGET}-cpp && \
  ln -s /usr/bin/x86_64-linux-gnu-cpp-5 ${CROSS_TARGET}-cpp-5 && \
  ln -s /usr/bin/x86_64-linux-gnu-dwp ${CROSS_TARGET}-dwp && \
  ln -s /usr/bin/x86_64-linux-gnu-elfedit ${CROSS_TARGET}-elfedit && \
  ln -s /usr/bin/x86_64-linux-gnu-g++ ${CROSS_TARGET}-g++ && \
  ln -s /usr/bin/x86_64-linux-gnu-g++-5 ${CROSS_TARGET}-g++-5 && \
  ln -s /usr/bin/x86_64-linux-gnu-gcc ${CROSS_TARGET}-gcc && \
  ln -s /usr/bin/x86_64-linux-gnu-gcc-5 ${CROSS_TARGET}-gcc-5 && \
  ln -s /usr/bin/x86_64-linux-gnu-gcc-ar ${CROSS_TARGET}-gcc-ar && \
  ln -s /usr/bin/x86_64-linux-gnu-gcc-ar-5 ${CROSS_TARGET}-gcc-ar-5 && \
  ln -s /usr/bin/x86_64-linux-gnu-gcc-nm ${CROSS_TARGET}-gcc-nm && \
  ln -s /usr/bin/x86_64-linux-gnu-gcc-nm-5 ${CROSS_TARGET}-gcc-nm-5 && \
  ln -s /usr/bin/x86_64-linux-gnu-gcc-ranlib ${CROSS_TARGET}-gcc-ranlib && \
  ln -s /usr/bin/x86_64-linux-gnu-gcc-ranlib-5 ${CROSS_TARGET}-gcc-ranlib-5 && \
  ln -s /usr/bin/x86_64-linux-gnu-gcov ${CROSS_TARGET}-gcov && \
  ln -s /usr/bin/x86_64-linux-gnu-gcov-5 ${CROSS_TARGET}-gcov-5 && \
  ln -s /usr/bin/x86_64-linux-gnu-gcov-tool ${CROSS_TARGET}-gcov-tool && \
  ln -s /usr/bin/x86_64-linux-gnu-gcov-tool-5 ${CROSS_TARGET}-gcov-tool-5 && \
  ln -s /usr/bin/x86_64-linux-gnu-ld ${CROSS_TARGET}-ld && \
  ln -s /usr/bin/x86_64-linux-gnu-ld.gold ${CROSS_TARGET}-ld.gold && \
  ln -s /usr/bin/x86_64-linux-gnu-nm ${CROSS_TARGET}-nm && \
  ln -s /usr/bin/x86_64-linux-gnu-objcopy ${CROSS_TARGET}-objcopy && \
  ln -s /usr/bin/x86_64-linux-gnu-objdump ${CROSS_TARGET}-objdump && \
  ln -s /usr/bin/x86_64-linux-gnu-pkg-config ${CROSS_TARGET}-pkg-config && \
  ln -s /usr/bin/x86_64-linux-gnu-ranlib ${CROSS_TARGET}-ranlib && \
  ln -s /usr/bin/x86_64-linux-gnu-readelf ${CROSS_TARGET}-readelf && \
  ln -s /usr/bin/x86_64-linux-gnu-size ${CROSS_TARGET}-size && \
  ln -s /usr/bin/x86_64-linux-gnu-strings ${CROSS_TARGET}-strings && \
  ln -s /usr/bin/x86_64-linux-gnu-strip ${CROSS_TARGET}-strip

ENV AR=${CROSS_BIN}/${CROSS_TARGET}-ar \
    AS=${CROSS_BIN}/${CROSS_TARGET}-as \
    CC=${CROSS_BIN}/${CROSS_TARGET}-gcc \
    CPP=${CROSS_BIN}/${CROSS_TARGET}-cpp \
    CXX=${CROSS_BIN}/${CROSS_TARGET}-g++ \
    LD=${CROSS_BIN}/${CROSS_TARGET}-ld \
    RANLIB=${CROSS_BIN}/${CROSS_TARGET}-ranlib \
    STRIP=${CROSS_BIN}/${CROSS_TARGET}-strip

COPY entrypoint_linux32.sh /var/opt

ENTRYPOINT ["/var/opt/entrypoint_linux32.sh"]
